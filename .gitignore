package ass1;

public class linkedlist {

    Node head;
    Node tail;
    int size;

    class Node {

        int data;
        Node next;

        Node(int data) {
            this.data = data;
        }
    }


    public void popfront(){
        size--;
        if(head==null){
            System.out.println("list is empty");
            return;
        }
        head =head.next;


    }

    public void popBack() {
        size--;
        Node temp = head;
        if (head == null) {
            System.out.println("The List is empty");
            return;
        }
        while (temp.next != tail) {
            temp = temp.next;
        }
        temp.next = null;
        tail = temp;
    }

    public void deleteByData(int data) {
        size--;
        if (head == null) {
            System.out.println("The List is empty");
            return;
        }
        if (head.data == data) {
            head = head.next;
            return;
        }
        Node t1 = head;
        Node t2 = head.next;
        while (t1 != null) {
            if (t2.data == data) {
                t1.next = t2.next;
            }
            t1 = t1.next;
            t2 = t2.next;
        }
    }

    public void print() {
        Node temp = head;
        while (temp != null) {
            System.out.print(temp.data + "-->");
            temp = temp.next;
        }
        System.out.println("null");
    }

    public void pushFront(int data) {
        size++;
        Node temp = new Node(data);
        if (head == null) {
            head = temp;
            tail = temp;
            return;
        }
        temp.next = head;
        head = temp;
    }
    public void pushBack(int data) {
        size++;
        Node node = new Node(data);
        if (head == null) {
            head = node;
            tail = node;
            return;
        }
        tail.next = node;
        tail = node;
    }
    public void insertAtIndex(int index, int data) {
        Node node = new Node(data);

        if (index == 0) {
            node.next = head;
            head = node;
        }
        if (index > size) {
            return;
        }
        Node t1 = head;
        Node t2 = head.next;
        for (int i = 1; i < index-1; i++) {
            t1 = t1.next;
            t2 = t2.next;
        }
        t1.next = node;
        node.next = t2;
    }
 

    public void deleteAtIndex(int index) {
        if (index == 0) {
            head = head.next;
            return;
        }
        if (index > size) {
            return;
        }
        Node t1 = head;
        Node t2 = head.next;
        for (int i = 1; i < index-1; i++) {
            t1 = t1.next;
            t2 = t2.next;
        }
        t1.next = t2.next;

    }
    public static void main(String[] args) {
        // TODO code application logic here
        linkedlist p = new linkedlist();
        p.pushBack(0);
        p.pushBack(2);
        p.pushBack(4);
        p.pushFront(7);
        p.pushFront(1);
        p.print();
        System.out.println("");
        p.deleteByData(2);
        p.insertAtIndex(4, 786);
        p.print();
        System.out.println();
        p.deleteAtIndex(4);
        p.print();
        System.out.println();
        p.pushBack(14);
        p.print();
        System.out.println();
        p.pushFront(14);
        p.print();
        System.out.println();
        p.popfront();
        p.print();
        System.out.println();
        p.popBack();
        p.print();
        System.out.println();
        p.pushBack(13);
        p.print();
        p.swapBylocation(2,3);
        p.print();

    }

}
